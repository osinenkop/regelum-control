Comments in code are formatted as:

# TO DO: CAPS FONT ONELINER

"""TO DO:
CAPS FONT
MULTILINE COMMENT
"""

Comments to methods come right before the method head.

%%%%%%%%%%%%%%%%%%%%%%% Specific comments

-- Start every comment with a capital letter. Do not use a trailing full stop unless in multiline comment section
-- Need updated flowchart: check if there are data flows and functional flows
-- Somewhere needs to be a docu on how callbacks work and how to use them
-- Remove nasty commented out debug code everywhere
-- Remove redundant comment where the method name is self-explanatory
-- Where is SMC controller?
-- Objective methods of policy and objective learners are removed from policy and objective learners. They are now passed externally
-- Need `TemporalDifferenceObjective` objective in general format which is TD(N)
-- Unify the format in which callbacks are applied. Sometimes they are there, sometimes not
-- Need a unified data buffer and its docu
-- Models: they need to be abstract, no references to actions and observations! Just use `dim_input`. No use of `dim_action`
-- Never use plain numbers in code
-- Leave optimizable, but document thoroughly and properly, with examples
-- policies. py: major revision
-- Start module header docstrings with "Contains ..."
-- Need separate docstrings for systems with formatted equations of motion and parameters descriptions with physical units
-- Write examples on how to use system composer

    There is 2 fundamental routes:

        1. TD objective with trailing max
        2. TD objective without a trailing max, which just uses what the data handler (buffer, whatever) provides

    1. is formally different to 2. because there is a min operator, so 1. is always off-policy. But 2. may be on or off-policy depending on what the data buffer provides. The fact is, 2. does not care.

    For instance, `TemporalDifferenceObjective` and `TemporalDifferenceObjectiveTrailOpt(TemporalDifferenceObjective)`