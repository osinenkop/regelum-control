_target_: regelum.controller.RLController

name%%: sdpg 

defaults:
  - policy: policy_sdpg
  - critic: critic

action_bounds: $ system_specific.action_bounds
sampling_time: $ system_specific.sampling_time
is_critic_first: True
running_objective: ~ running_objective
discount_factor: $ scenario.discount_factor
critic_optimization_event: reset_iteration
policy_optimization_event: reset_iteration
data_buffer_nullify_event: reset_iteration
device%%: cpu

critic:
  is_on_policy: True
  is_same_critic: False
  is_value_function: False
  td_n: 5
  device: $ controller.device%%
  optimizer_config: 
    _target_: regelum.OptimizerConfig
    kind: tensor
    opt_method: = torch.optim.Adam
    opt_options: 
      lr: 0.001
    config_options:
      n_epochs: 50
      is_reinstantiate_optimizer: True
      data_buffer_sampling_method: iter_batches
      data_buffer_sampling_kwargs: 
        batch_sampler: = regelum.data_buffers.batch_sampler.EpisodicSampler
        dtype: = torch.FloatTensor

policy:
  optimizer_config: 
    opt_options:
      lr: 0.001
    config_options:
      is_reinstantiate_optimizer: True
      n_epochs: 100
  device: $ controller.device%%